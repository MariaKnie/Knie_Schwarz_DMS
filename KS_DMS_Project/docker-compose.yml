services:
  asp_rest_api:
    image: asp_rest_api_image
    build:
      context: . # Ensure this points to the correct directory where the Dockerfile is located
      dockerfile: ./ASP_Rest_API/Dockerfile     # This should match the Dockerfile name directly
    ports:
      - "8081:8081"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8081
    depends_on:
      - mydocdal
      - rabbitmq
      - minio
    volumes:
      - ./uploads:/app/uploads

  webui:
    image: web_ui_image
    build:
      context: ./WebUI
      dockerfile: Dockerfile
    ports:
      - "80:80"
    volumes:
      - ./WebUI/nginx.conf:/etc/nginx/nginx.conf
      - ./WebUI/wwwroot:/app/wwwroot
    depends_on:
      - asp_rest_api

  db:
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  mydocdal:
    image: mydocdal_image
    build:
      context: .
      dockerfile: ./MyDocDAL/Dockerfile
    ports:
      - "8082:8082"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8082
    depends_on:
       db:
        condition: service_healthy  # Wait for the db service to be healthy

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ./rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password

  ocr_worker:
    image: ocr_worker_image
    build:
      context: ./OcrWorker  
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    volumes:
      - ./uploads:/app/uploads

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - ./uploads:/app/uploads

volumes:
  postgres_data: 
